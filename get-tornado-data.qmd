---
title: "Get tornado data"
format: 
  revealjs:
    code-fold: false
    theme: white
    footer: "GEO4251 Climate Change & Storms"
    chalkboard: true
editor: source
---

## 

-   Where do you find data on past tornadoes?
-   How do you get the data into a format you can work with?

![Tornado tracks](https://farm8.staticflickr.com/7090/7157010997_2a92fa603c_o.jpg)

## 

-   The Storm Prediction Center has data on all tornadoes in the U.S. back to 1950. The data are available [here](https://www.spc.noaa.gov/wcm/)

-   Here you are interested in the file called `1950-2021_actual_tornadoes.csv`. First download the file from the site with the `download.file()` function specifying the location (`url =`) and a name you want the file to be called on your computer (`destfile =`)

```{r}
#| echo: true
download.file(url = "http://www.spc.noaa.gov/wcm/data/1950-2021_actual_tornadoes.csv",
              destfile = here::here("data", "Tornadoes.csv"))
```

-   A file called `Tornadoes.csv` should now be located in the directory `data`. Click on the *Files* tab in the lower-right panel, then select the `data` folder

##  {.smaller}

-   You import the file as a data frame using the `readr::read_csv()` function and then preview it with the `head()` function

```{r}
#| echo: true
Torn.df <- readr::read_csv(file = here::here("data", "Tornadoes.csv"))

Torn.df |>
  head()
```

-   Each row is a separate tornado report. Observations in each report include the day and time, the state (`st`), the maximum EF rating (`mag`), the number of injuries (`inj`), the number of fatalities (`fat`), estimated property losses (`loss`), estimated crop losses (`closs`), start and end locations in decimal degrees longitude and latitude, length of the damage path in miles (`len`), width of the damage in yards (`wid`)

## 

![Birmingham, AL tornado](figures/BirminghamDamagePath.jpg)

##

-   The total number of tornado reports in the data set is returned using the `nrow()` function

```{r}
#| echo: true
Torn.df |>
  nrow()
```

You create a subset of the data frame that contains only tornadoes in the years (`yr`) since 2001 by including the logical operator `yr >= 2001` inside the `dplyr::filter()` function

```{r}
#| echo: true
Torn2.df <- Torn.df |>
  dplyr::filter(yr >= 2001)

Torn2.df |>
  dim()
```

## 

-   Here you subset again keeping only tornadoes with EF ratings (`mag` variable) greater than zero. You *recycle* the name `Torn2.df`

```{r}
#| echo: true
Torn2.df <- Torn2.df |>
  dplyr::filter(mag > 0)
```

-   Now you compute the correlation between EF rating (`mag`) and path length (`len`) with the `cor()` function

```{r}
#| echo: true
cor(Torn2.df$mag, Torn2.df$len) |>
  round(digits = 3)
```

## 

-   Path length is recorded in miles and path width in yards and the EF damage rating variable `mag` is numeric
-   Convert path length to kilometers, path width to meters, and the EF rating to a factor and include these changes as new columns in the data frame

```{r}
#| echo: true
Torn2.df <- Torn2.df |>
  dplyr::mutate(Length = len * 1.60934,
                Width = wid * .9144,
                EF = factor(mag))
```

-   Create box plots of path length by EF rating

```{r}
#| echo: true
#| output-location: slide
#| fig-width: 6
#| fig-height: 6
library(ggplot2)
ggplot(data = Torn2.df,
       mapping = aes(x = EF, y = Length)) +
  geom_boxplot()
```

##

Download the data and put it into the folder called `data`.

```{r}
#| echo: true
loc <- "http://www.spc.noaa.gov/gis/svrgis/zipped/1950-2021-torn-aspath.zip"

download.file(url = loc,
              destfile = here::here("data", "1950-2021-torn-aspath.zip"))

unzip(zipfile = here::here("data", "1950-2021-torn-aspath.zip"), 
      exdir = here::here("data"))
```

##

Get the data into your R session.
```{r}
#| echo: true
Torn.sf <- sf::st_read(dsn = here::here("data", "1950-2021-torn-aspath"), 
                       layer = "1950-2021-torn-aspath") 
```

The geometry type is line string representing the straight-line approximate track of each tornado. The coordinate reference system (CRS) is WGS84.

## Damage assessment toolkit

<https://apps.dat.noaa.gov/stormdamage/damageviewer/>

## 

{{< video https://www.youtube.com/embed/jcIR9Hl62yo >}} 22 minutes
